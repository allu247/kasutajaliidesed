{"remainingRequest":"C:\\Users\\alvar\\IdeaProjects\\cgiProject\\front-end\\app\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\alvar\\IdeaProjects\\cgiProject\\front-end\\app\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\alvar\\IdeaProjects\\cgiProject\\front-end\\app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\alvar\\IdeaProjects\\cgiProject\\front-end\\app\\src\\components\\ViewPosts.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\alvar\\IdeaProjects\\cgiProject\\front-end\\app\\src\\components\\ViewPosts.vue","mtime":1556405045767},{"path":"C:\\Users\\alvar\\IdeaProjects\\cgiProject\\front-end\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\alvar\\IdeaProjects\\cgiProject\\front-end\\app\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\alvar\\IdeaProjects\\cgiProject\\front-end\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\alvar\\IdeaProjects\\cgiProject\\front-end\\app\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport apiRequests from '../javascript/apiRequests.js';\nimport errorHandling from './../javascript/errorHandling.js';\nexport default {\n  name: 'ViewPosts',\n  methods: {\n    loadContent: function loadContent() {\n      this.currentPageNum = 0;\n      this.searchTerm = this.$route.params.searchTerm;\n\n      if (this.searchTerm !== null && this.searchTerm !== '' && this.searchTerm !== undefined) {\n        this.baseUrl = '/api/books/find?searchTerm=' + this.searchTerm;\n      } else {\n        this.topic = this.$route.name;\n        this.baseUrl = '/api/books?topic=' + this.topic;\n      }\n\n      this.dataRequest(this.baseUrl);\n    },\n    goToDetail: function goToDetail(proId) {\n      this.$router.push({\n        name: 'editbook',\n        params: {\n          Pid: proId\n        }\n      });\n    },\n    nextPage: function nextPage() {\n      this.currentPageNum += 1;\n      var url = this.getUrl() + '&page=' + this.currentPageNum;\n      this.dataRequest(url);\n    },\n    prevPage: function prevPage() {\n      this.currentPageNum -= 1;\n      var url = this.getUrl() + '&page=' + this.currentPageNum;\n      this.dataRequest(url);\n    },\n    getUrl: function getUrl() {\n      var url = this.baseUrl;\n\n      if (this.sortBy !== '') {\n        var sortKeyword;\n        var sortDirection;\n\n        if (this.sortBy === 'Latest posts first') {\n          sortKeyword = 'postedAt';\n          sortDirection = 'descending';\n        } else if (this.sortBy === 'Earliest posts first') {\n          sortKeyword = 'postedAt';\n          sortDirection = 'ascending';\n        } else if (this.sortBy === 'Alphabetically descending') {\n          sortKeyword = 'topic';\n          sortDirection = 'descending';\n        } else if (this.sortBy === 'Alphabetically ascending') {\n          sortKeyword = 'topic';\n          sortDirection = 'ascending';\n        }\n\n        url += '&sortBy=' + sortKeyword + '&order=' + sortDirection;\n      }\n\n      return url;\n    },\n    sort: function sort() {\n      this.dataRequest(this.getUrl());\n    },\n    deletePost: function deletePost(bookId) {\n      var _this = this;\n\n      apiRequests.deleteRequestToApi('/api/delete/book/' + bookId).then(function () {\n        _this.loadContent();\n      }).catch(function () {\n        errorHandling.errorMsgWithButton(\"Failed to delete this book!\");\n      });\n    },\n    dataRequest: function dataRequest(url) {\n      var _this2 = this;\n\n      apiRequests.getRequestToApi(url).then(function (result) {\n        _this2.response = result.data.books;\n\n        if (result.data.amountOfPages <= 0) {\n          _this2.numOfPages = 0;\n        } else {\n          _this2.numOfPages = result.data.amountOfPages - 1;\n        }\n      });\n    }\n  },\n  watch: {\n    $route: function $route() {\n      this.loadContent();\n    }\n  },\n  data: function data() {\n    return {\n      response: [],\n      numOfPages: 0,\n      currentPageNum: 0,\n      topic: 'all',\n      sortBy: '',\n      searchTerm: null,\n      baseUrl: ''\n    };\n  },\n  mounted: function mounted() {\n    this.loadContent();\n  }\n};",{"version":3,"sources":["ViewPosts.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"container-fluid\">\r\n      <div class=\"row justify-content-center\">\r\n\r\n        <div class=\"col-lg-9 col-md-10 col-sm-12 px-0 divider\">\r\n          <div class=\"col-xl-4 col-lg-5 col-md-6 col-sm-8 input-group px-0 float-right order-by-form\">\r\n            <select class=\"custom-select border-0\" id=\"inputGroupSelect\" v-model=\"sortBy\">\r\n              <option disabled value=\"\">Sort by...</option>\r\n              <option>Latest posts first</option>\r\n              <option>Earliest posts first</option>\r\n              <option>Alphabetically descending</option>\r\n              <option>Alphabetically ascending</option>\r\n            </select>\r\n            <div class=\"input-group-append border-0\">\r\n              <button class=\"btn btn-secondary border-0\" type=\"button\" @click=\"sort()\">Sort</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-lg-9 col-md-10 col-sm-12 px-0\">\r\n          <div class=\"post-list-item my-2 p-2 text-left\" v-for=\"(data, index) in response\" :key='data.id'>\r\n            <h3>Title: {{data.title}}</h3>\r\n            <p>Topic: {{data.topic}}</p>\r\n            <p>Author: {{data.author}}</p>\r\n            <p>ISBN: {{data.isbn}}</p>\r\n              <p>Comments: {{data.comments.length}}</p>\r\n            <button class=\"btn btn-danger m-1\" type=\"submit\"\r\n                    @click=\"deletePost(data.id)\">Delete</button>\r\n            <button class=\"btn btn-warning m-1\" type=\"submit\"\r\n                    @click=\"goToDetail(data.id)\">Edit</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <router-link class=\"btn btn-dark mx-1\" id=\"addNewBook\" tag=\"button\" to=\"/addbook\" exact>\r\n        Add book\r\n      </router-link>\r\n    </div>\r\n\r\n    <br>\r\n    <button class=\"mr-1 ml-1 mb-3 btn btn-lg btn-dark\" v-if=\"currentPageNum > 0\" v-on:click=\"prevPage()\">\r\n      Previous\r\n    </button>\r\n    <button class=\"mr-1 ml-1 mb-3 btn btn-lg btn-dark\" v-if=\"currentPageNum < numOfPages\" v-on:click=\"nextPage()\">\r\n      Next\r\n    </button>\r\n    <br>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n    import apiRequests from '../javascript/apiRequests.js';\r\n    import errorHandling from './../javascript/errorHandling.js';\r\n\r\n    export default {\r\n        name: 'ViewPosts',\r\n        methods: {\r\n            loadContent() {\r\n                this.currentPageNum = 0;\r\n\r\n                this.searchTerm = this.$route.params.searchTerm;\r\n                if (this.searchTerm !== null && this.searchTerm !== '' && this.searchTerm !== undefined) {\r\n                    this.baseUrl = '/api/books/find?searchTerm=' + this.searchTerm;\r\n                } else {\r\n                    this.topic = this.$route.name;\r\n                    this.baseUrl = '/api/books?topic=' + this.topic;\r\n                }\r\n\r\n                this.dataRequest(this.baseUrl);\r\n            },\r\n            goToDetail(proId) {\r\n            this.$router.push({name: 'editbook', params: {Pid: proId}})\r\n          },\r\n            nextPage() {\r\n                this.currentPageNum += 1;\r\n                let url = this.getUrl() + '&page=' + this.currentPageNum;\r\n                this.dataRequest(url);\r\n            },\r\n            prevPage() {\r\n                this.currentPageNum -= 1;\r\n                let url = this.getUrl() + '&page=' + this.currentPageNum;\r\n                this.dataRequest(url);\r\n            },\r\n            getUrl() {\r\n                let url = this.baseUrl;\r\n\r\n                if (this.sortBy !== '') {\r\n                    let sortKeyword;\r\n                    let sortDirection;\r\n\r\n                    if (this.sortBy === 'Latest posts first') {\r\n                        sortKeyword = 'postedAt';\r\n                        sortDirection = 'descending';\r\n                    } else if (this.sortBy === 'Earliest posts first') {\r\n                        sortKeyword = 'postedAt';\r\n                        sortDirection = 'ascending';\r\n                    } else if (this.sortBy === 'Alphabetically descending') {\r\n                        sortKeyword = 'topic';\r\n                        sortDirection = 'descending';\r\n                    } else if (this.sortBy === 'Alphabetically ascending') {\r\n                        sortKeyword = 'topic';\r\n                        sortDirection = 'ascending';\r\n                    }\r\n                    url += '&sortBy=' + sortKeyword + '&order=' + sortDirection;\r\n                }\r\n\r\n                return url\r\n            },\r\n            sort() {\r\n                this.dataRequest(this.getUrl());\r\n            },\r\n\r\n          deletePost(bookId) {\r\n            apiRequests\r\n                    .deleteRequestToApi('/api/delete/book/' + bookId)\r\n                    .then(() => {\r\n                      this.loadContent();\r\n                    })\r\n                    .catch(() => {\r\n                              errorHandling.errorMsgWithButton(\"Failed to delete this book!\")\r\n                            }\r\n                    );\r\n          },\r\n\r\n            dataRequest(url) {\r\n                apiRequests.getRequestToApi(url)\r\n                    .then(result => {\r\n                        this.response = result.data.books;\r\n\r\n                        if (result.data.amountOfPages <= 0) {\r\n                            this.numOfPages = 0;\r\n                        } else {\r\n                            this.numOfPages = result.data.amountOfPages - 1;\r\n                        }\r\n                    });\r\n            },\r\n        },\r\n        watch: {\r\n            $route() {\r\n                this.loadContent();\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                response: [],\r\n                numOfPages: 0,\r\n                currentPageNum: 0,\r\n                topic: 'all',\r\n                sortBy: '',\r\n                searchTerm: null,\r\n                baseUrl: ''\r\n            };\r\n        },\r\n        mounted() {\r\n            this.loadContent();\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n  /*@import './../css/postsView.css';*/\r\n\r\n  .divider {\r\n    border-bottom: 4px solid #e5e5e5;\r\n  }\r\n\r\n  .order-by-form {\r\n    border-top: 4px solid #e5e5e5;\r\n    border-right: 4px solid #e5e5e5;\r\n    border-left: 4px solid #e5e5e5;\r\n    border-radius: 0;\r\n    background-color: #f6f6f6;\r\n  }\r\n\r\n  .border-0 {\r\n    border-radius: 0 !important;\r\n  }\r\n</style>\r\n"],"sourceRoot":"src/components"}]}