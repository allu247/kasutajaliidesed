{"remainingRequest":"C:\\Users\\alvar\\IdeaProjects\\front-end\\app\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\alvar\\IdeaProjects\\front-end\\app\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\alvar\\IdeaProjects\\front-end\\app\\src\\javascript\\apiRequests.js","dependencies":[{"path":"C:\\Users\\alvar\\IdeaProjects\\front-end\\app\\src\\javascript\\apiRequests.js","mtime":1555695378875},{"path":"C:\\Users\\alvar\\IdeaProjects\\front-end\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\alvar\\IdeaProjects\\front-end\\app\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\alvar\\IdeaProjects\\front-end\\app\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\alvar\\\\IdeaProjects\\\\front-end\\\\app\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nvar apiUrl = 'http://localhost:8090';\n\nfunction getRequest(_x) {\n  return _getRequest.apply(this, arguments);\n}\n\nfunction _getRequest() {\n  _getRequest = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(url) {\n    var response;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios.get(apiUrl + url);\n\n          case 2:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getRequest.apply(this, arguments);\n}\n\nfunction postRequest(_x2, _x3) {\n  return _postRequest.apply(this, arguments);\n}\n\nfunction _postRequest() {\n  _postRequest = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(url, data) {\n    var response;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return axios.post(apiUrl + url, data);\n\n          case 2:\n            response = _context2.sent;\n            return _context2.abrupt(\"return\", response);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _postRequest.apply(this, arguments);\n}\n\nexport default {\n  apiUrl: apiUrl,\n  getRequestToApi: function getRequestToApi(url) {\n    return getRequest(url);\n  },\n  postRequestToApi: function postRequestToApi(url, data) {\n    return postRequest(url, data);\n  }\n};",{"version":3,"sources":["C:\\Users\\alvar\\IdeaProjects\\front-end\\app\\src\\javascript\\apiRequests.js"],"names":["axios","apiUrl","getRequest","url","get","response","postRequest","data","post","getRequestToApi","postRequestToApi"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,IAAMC,MAAM,GAAG,uBAAf;;SAGeC,U;;;;;;;0BAAf,iBAA0BC,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACyBH,KAAK,CAACI,GAAN,CAAUH,MAAM,GAAGE,GAAnB,CADzB;;AAAA;AACQE,YAAAA,QADR;AAAA,6CAGWA,QAHX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAQeC,W;;;;;;;0BAAf,kBAA2BH,GAA3B,EAAgCI,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACyBP,KAAK,CAACQ,IAAN,CAAWP,MAAM,GAAGE,GAApB,EACjBI,IADiB,CADzB;;AAAA;AACQF,YAAAA,QADR;AAAA,8CAIWA,QAJX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AASA,eAAe;AACXJ,EAAAA,MAAM,EAANA,MADW;AAGXQ,EAAAA,eAHW,2BAGKN,GAHL,EAGU;AACjB,WAAOD,UAAU,CAACC,GAAD,CAAjB;AACH,GALU;AAOXO,EAAAA,gBAPW,4BAOMP,GAPN,EAOWI,IAPX,EAOiB;AACxB,WAAOD,WAAW,CAACH,GAAD,EAAMI,IAAN,CAAlB;AACH;AATU,CAAf","sourcesContent":["import axios from 'axios';\r\nconst apiUrl = 'http://localhost:8090';\r\n\r\n\r\nasync function getRequest(url) {\r\n    let response = await axios.get(apiUrl + url);\r\n\r\n    return response\r\n}\r\n\r\n\r\n\r\nasync function postRequest(url, data) {\r\n    let response = await axios.post(apiUrl + url,\r\n        data);\r\n\r\n    return response\r\n}\r\n\r\n\r\n\r\nexport default {\r\n    apiUrl,\r\n\r\n    getRequestToApi(url) {\r\n        return getRequest(url);\r\n    },\r\n\r\n    postRequestToApi(url, data) {\r\n        return postRequest(url, data);\r\n    },\r\n\r\n\r\n}\r\n"]}]}