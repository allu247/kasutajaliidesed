{"remainingRequest":"C:\\Users\\alvar\\IdeaProjects\\cgiProject\\front-end\\app\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\alvar\\IdeaProjects\\cgiProject\\front-end\\app\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\alvar\\IdeaProjects\\cgiProject\\front-end\\app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\alvar\\IdeaProjects\\cgiProject\\front-end\\app\\src\\components\\editBook.vue?vue&type=template&id=2ce992a3&scoped=true&","dependencies":[{"path":"C:\\Users\\alvar\\IdeaProjects\\cgiProject\\front-end\\app\\src\\components\\editBook.vue","mtime":1556404692748},{"path":"C:\\Users\\alvar\\IdeaProjects\\cgiProject\\front-end\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\alvar\\IdeaProjects\\cgiProject\\front-end\\app\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\alvar\\IdeaProjects\\cgiProject\\front-end\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\alvar\\IdeaProjects\\cgiProject\\front-end\\app\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"container-fluid\" }, [\n    _c(\"div\", { staticClass: \"row justify-content-center\" }, [\n      _c(\n        \"div\",\n        { staticClass: \"col-xl-7 col-lg-8 col-md-9 col-sm-11\" },\n        [\n          _c(\"h3\", [_vm._v(\"Edit book\")]),\n          _c(\n            \"form\",\n            {\n              attrs: { id: \"edit-form\", \"data-vv-scope\": \"editing\" },\n              on: {\n                submit: function($event) {\n                  $event.preventDefault()\n                  return _vm.saveEditBook($event)\n                }\n              }\n            },\n            [\n              _c(\"div\", { staticClass: \"form-group text-left\" }, [\n                _c(\"label\", { attrs: { for: \"topic\" } }, [_vm._v(\"Topic:\")]),\n                _c(\n                  \"select\",\n                  {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.topic,\n                        expression: \"topic\"\n                      },\n                      {\n                        name: \"validate\",\n                        rawName: \"v-validate\",\n                        value: { required: true },\n                        expression: \"{ required: true }\"\n                      }\n                    ],\n                    staticClass: \"form-control\",\n                    attrs: { id: \"topic\", name: \"topic\" },\n                    on: {\n                      change: function($event) {\n                        var $$selectedVal = Array.prototype.filter\n                          .call($event.target.options, function(o) {\n                            return o.selected\n                          })\n                          .map(function(o) {\n                            var val = \"_value\" in o ? o._value : o.value\n                            return val\n                          })\n                        _vm.topic = $event.target.multiple\n                          ? $$selectedVal\n                          : $$selectedVal[0]\n                      }\n                    }\n                  },\n                  [\n                    _c(\"option\", { attrs: { value: \"Mathematics\" } }, [\n                      _vm._v(\"Mathematics\")\n                    ]),\n                    _c(\"option\", { attrs: { value: \"Physics\" } }, [\n                      _vm._v(\"Physics\")\n                    ]),\n                    _c(\"option\", { attrs: { value: \"Chemistry\" } }, [\n                      _vm._v(\"Chemistry\")\n                    ]),\n                    _c(\"option\", { attrs: { value: \"Biology\" } }, [\n                      _vm._v(\"Biology\")\n                    ]),\n                    _c(\"option\", { attrs: { value: \"Computer_Science\" } }, [\n                      _vm._v(\"Computer Science\")\n                    ]),\n                    _c(\n                      \"option\",\n                      { attrs: { value: \"Varia\", selected: \"selected\" } },\n                      [_vm._v(\"Varia\")]\n                    )\n                  ]\n                ),\n                _vm.errors.has(\"editing.topic\")\n                  ? _c(\"div\", { staticClass: \"error\" }, [\n                      _vm._v(_vm._s(_vm.errors.first(\"editing.topic\")))\n                    ])\n                  : _vm._e()\n              ]),\n              _c(\"div\", { staticClass: \"form-group text-left\" }, [\n                _c(\"label\", { attrs: { for: \"title\" } }, [_vm._v(\"Title:\")]),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.title,\n                      expression: \"title\"\n                    },\n                    {\n                      name: \"validate\",\n                      rawName: \"v-validate\",\n                      value: { required: true, min: 3, max: 128 },\n                      expression: \"{ required: true, min: 3, max: 128 }\"\n                    }\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: {\n                    id: \"title\",\n                    type: \"text\",\n                    name: \"title\",\n                    placeholder: \"Title\"\n                  },\n                  domProps: { value: _vm.title },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.title = $event.target.value\n                    }\n                  }\n                }),\n                _vm.errors.has(\"editing.title\")\n                  ? _c(\"div\", { staticClass: \"error\" }, [\n                      _vm._v(_vm._s(_vm.errors.first(\"editing.title\")))\n                    ])\n                  : _vm._e()\n              ]),\n              _c(\"div\", { staticClass: \"form-group text-left\" }, [\n                _c(\"label\", { attrs: { for: \"author\" } }, [_vm._v(\"Author:\")]),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.author,\n                      expression: \"author\"\n                    },\n                    {\n                      name: \"validate\",\n                      rawName: \"v-validate\",\n                      value: { required: true, min: 5 },\n                      expression: \"{ required: true, min: 5 }\"\n                    }\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: {\n                    id: \"author\",\n                    name: \"author\",\n                    placeholder: \"Author\"\n                  },\n                  domProps: { value: _vm.author },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.author = $event.target.value\n                    }\n                  }\n                }),\n                _vm.errors.has(\"editing.author\")\n                  ? _c(\"div\", { staticClass: \"error\" }, [\n                      _vm._v(_vm._s(_vm.errors.first(\"editing.author\")))\n                    ])\n                  : _vm._e()\n              ]),\n              _c(\"div\", { staticClass: \"form-group text-left\" }, [\n                _c(\"label\", { attrs: { for: \"ISBN\" } }, [_vm._v(\"ISBN:\")]),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.ISBN,\n                      expression: \"ISBN\"\n                    },\n                    {\n                      name: \"validate\",\n                      rawName: \"v-validate\",\n                      value: { required: true, min: 5 },\n                      expression: \"{ required: true, min: 5 }\"\n                    }\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: {\n                    id: \"ISBN\",\n                    type: \"text\",\n                    name: \"ISBN\",\n                    placeholder: \"ISBN\"\n                  },\n                  domProps: { value: _vm.ISBN },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.ISBN = $event.target.value\n                    }\n                  }\n                }),\n                _vm.errors.has(\"editing.isbn\")\n                  ? _c(\"div\", { staticClass: \"error\" }, [\n                      _vm._v(_vm._s(_vm.errors.first(\"editing.isbn\")))\n                    ])\n                  : _vm._e()\n              ]),\n              _c(\"input\", {\n                staticClass: \"btn btn-lg btn-primary mb-3\",\n                attrs: { type: \"submit\", value: \"Edit\" }\n              })\n            ]\n          ),\n          _vm._l(_vm.response.comments, function(answer) {\n            return _c(\n              \"div\",\n              {\n                key: answer.id,\n                staticClass: \"post-item text-left p-2 mx-2 mb-2\"\n              },\n              [\n                _c(\"div\", { staticClass: \"text-left\" }, [\n                  _c(\"p\", { staticClass: \"mb-1\" }, [\n                    _vm._v(_vm._s(answer.comment))\n                  ]),\n                  _c(\"p\", { staticClass: \"mt-2 mb-1\" }, [\n                    _c(\"small\", [\n                      _vm._v(\n                        \"\\n              Added: \" +\n                          _vm._s(\n                            _vm._f(\"moment\")(\n                              answer.postedAt,\n                              \"dddd, MMMM Do YYYY h:mm:ss a\"\n                            )\n                          ) +\n                          \"\\n            \"\n                      )\n                    ])\n                  ])\n                ])\n              ]\n            )\n          }),\n          _c(\n            \"form\",\n            {\n              staticClass: \"my-3 p-2 reply-area\",\n              attrs: { id: \"comment-form\", \"data-vv-scope\": \"commenting\" },\n              on: {\n                submit: function($event) {\n                  $event.preventDefault()\n                  return _vm.postComment($event)\n                }\n              }\n            },\n            [\n              _c(\"div\", { staticClass: \"form-group text-left\" }, [\n                _c(\"label\", { attrs: { for: \"exampleFormControlTextarea1\" } }, [\n                  _vm._v(\"Add comment to this book:\")\n                ]),\n                _c(\"textarea\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.comment,\n                      expression: \"comment\"\n                    },\n                    {\n                      name: \"validate\",\n                      rawName: \"v-validate\",\n                      value: { required: true, min: 5 },\n                      expression: \"{ required: true, min: 5 }\"\n                    }\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: {\n                    id: \"exampleFormControlTextarea1\",\n                    rows: \"3\",\n                    name: \"comment\",\n                    placeholder: \"Comment\"\n                  },\n                  domProps: { value: _vm.comment },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.comment = $event.target.value\n                    }\n                  }\n                }),\n                _vm.errors.has(\"commenting.comment\")\n                  ? _c(\"div\", { staticClass: \"error\" }, [\n                      _vm._v(_vm._s(_vm.errors.first(\"commenting.comment\")))\n                    ])\n                  : _vm._e()\n              ]),\n              _c(\"input\", {\n                staticClass: \"btn btn-lg btn-primary\",\n                attrs: { type: \"submit\", value: \"Add comment\" }\n              })\n            ]\n          )\n        ],\n        2\n      ),\n      _c(\"br\")\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}